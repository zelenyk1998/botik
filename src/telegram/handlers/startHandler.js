const UserController = require('../controllers/userController');
const logger = require('../utils/logger');

module.exports = (bot, sessionService) => {
  // –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start
  bot.onText(/\/start/, async (msg) => {
    const chatId = msg.chat.id;
    
    try {
      // –§–æ—Ä–º—É—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ Telegram
      const userData = {
        telegram_id: msg.from.id.toString(),
        username: msg.from.username || null,
        first_name: msg.from.first_name || '',
        last_name: msg.from.last_name || ''
      };
      
      // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–±–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
      let user = await UserController.findUserByTelegramId(userData.telegram_id);
      
      if (!user) {
        // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        user = await UserController.createUser(userData);
        logger.info(`–ù–æ–≤–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —Å—Ç–≤–æ—Ä–µ–Ω–∏–π: ${user.id}`);
      } else {
        // –û–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        user = await UserController.updateUser(userData.telegram_id, {
          username: userData.username,
          first_name: userData.first_name,
          last_name: userData.last_name
        });
        logger.info(`–ü—Ä–æ—Ñ—ñ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –æ–Ω–æ–≤–ª–µ–Ω–æ: ${user.id}`);
      }
      
      // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–µ—Å—ñ—ó
      sessionService.create(chatId, { 
        state: 'main_menu',
        userId: user.id 
      });
      
      // –ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
      await bot.sendMessage(chatId, 
        `üëã –í—ñ—Ç–∞—î–º–æ —É —á–∞—Ç-–±–æ—Ç—ñ –∑ –ø—Ä–æ–¥–∞–∂—É —Ç–∞–ª–æ–Ω—ñ–≤ –Ω–∞ –ø–∞–ª—å–Ω–µ!\n\n–í–∏–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é:`, 
        {
          reply_markup: {
            keyboard: [
              ['üîç –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ —Ü—ñ–Ω'],
              ['üõí –ü—Ä–∏–¥–±–∞—Ç–∏ —Ç–∞–ª–æ–Ω–∏'],
              ['üé´ –ú–æ—ó —Ç–∞–ª–æ–Ω–∏'],
              ['üìû –ü—ñ–¥—Ç—Ä–∏–º–∫–∞', 'üë§ –ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å'],
              ['ü§ù –°—Ç–∞—Ç–∏ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º']
            ],
            resize_keyboard: true
          }
        }
      );
    } catch (error) {
      logger.error(`–ü–æ–º–∏–ª–∫–∞ –≤ –æ–±—Ä–æ–±—Ü—ñ –∫–æ–º–∞–Ω–¥–∏ /start: ${error.message}`);
      await bot.sendMessage(chatId, '–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.');
    }
  });
};